#Global configuration
spring.application.name=chartomancer
spring.main.allow-bean-definition-overriding=true
#Log level configuration
logging.level.root=error
logging.level.co.syngleton.chartomancer=info
logging.level.org.springframework.boot.web.embedded.tomcat=info
logging.level.org.springframework.transaction.interceptor=error
#Identifiers configuration
backend-api-key=${BACKEND_API_KEY}
#Web configuration
server.port=${SERVER_PORT}
server.ssl.key-store=${SSL_KEYSTORE}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
server.ssl.key-store-type=${SSL_KEYSTORE_TYPE}
server.ssl.key-alias=${SSL_KEYSTORE_ALIAS}
web.cors.allowed-origins=${WEB_CORS_ALLOWED_ORIGINS}
web.cors.allowed-methods=${WEB_CORS_ALLOWED_METHODS}
web.cors.allowed-headers=${WEB_CORS_ALLOWED_HEADERS}
#Charting configuration
charting.data_source=${CHARTING_DATA_SOURCE}
charting.csv_reader=${CHARTING_CSV_READER}
charting.repair_missing_candles=${CHARTING_REPAIR_MISSING_CANDLES}
#Data configuration
data.folder_name=${DATA_FOLDER_NAME}
data.source=${DATA_SOURCE}
data.source_name=${DATA_SOURCE_NAME}
data.files_names=${DATA_FILE_NAMES}
data.run_analysis_at_startup=${DATA_RUN_ANALYSIS_AT_STARTUP}
data.generate_trading_data=${DATA_GENERATE_TRADING_DATA}
data.create_graphs_for_missing_timeframes=${DATA_CREATE_GRAPHS_FOR_MISSING_TIMEFRAMES}
data.load_core_data_at_startup=${DATA_LOAD_CORE_DATA_AT_STARTUP}
data.override_saved_core_data=${DATA_OVERRIDE_SAVED_CORE_DATA}
data.override_saved_test_core_data=${DATA_OVERRIDE_SAVED_TEST_CORE_DATA}
data.create_timestamped_core_data_archive=${DATA_CREATE_TIMESTAMPED_CORE_DATA_ARCHIVE}
data.purge_after_trading_data_generation=${DATA_PURGE_AFTER_TRADING_DATA_GENERATION}
data.pattern_settings_autoconfig=${DATA_PATTERN_SETTINGS_AUTOCONFIG}
data.computation_settings_autoconfig=${DATA_COMPUTATION_SETTINGS_AUTOCONFIG}
data.computation_type=${DATA_COMPUTATION_TYPE}
data.computable_pattern_type=${DATA_COMPUTABLE_PATTERN_TYPE}
data.atomic_partition=${DATA_ATOMIC_PARTITION}
data.full_scope=${DATA_FULL_SCOPE}
data.patternboxes_timeframes=${DATA_PATTERNBOXES_TIMEFRAMES}
#Pattern-recognition configuration
patternrecognition.match_score_smoothing=NONE
patternrecognition.match_score_threshold=20
patternrecognition.price_variation_threshold=1
patternrecognition.extrapolate_price_variation=false
patternrecognition.extrapolate_match_score=false
#Trading configuration
trading.match_score_smoothing=${TRADING_MATCH_SCORE_SMOOTHING}
trading.match_score_threshold=${TRADING_MATCH_SCORE_THRESHOLD}
trading.price_variation_threshold=${TRADING_PRICE_VARIATION_THRESHOLD}
trading.extrapolate_price_variation=${TRADING_EXTRAPOLATE_PRICE_VARIATION}
trading.extrapolate_match_score=${TRADING_EXTRAPOLATE_MATCH_SCORE}
trading.reward_to_risk_ratio=${TRADING_REWARD_TO_RISK_RATIO}
trading.risk_percentage=${TRADING_RISK_PERCENTAGE}
trading.price_variation_multiplier=${TRADING_PRICE_VARIATION_MULTIPLIER}
trading.SL_TP_Strategy=${TRADING_SL_TP_STRATEGY}
trading.fee_percentage=${TRADING_FEE_PERCENTAGE}
#API Requesting configuration
api-requesting.enable_requesting_coredata=${API_REQUESTING_ENABLE_REQUESTING_CORE_DATA}
api-requesting.data_folder_name=${API_REQUESTING_DATA_FOLDER_NAME}
api-requesting.data_file_names=${API_REQUESTING_DATA_FILE_NAMES}
#Automation configuration
automation.launch_automation=false
automation.print_core_data=true
automation.print_price_prediction_summary=true
automation.run_basic_dummy_trades=false
automation.run_randomized_dummy_trades=false
automation.run_randomized_dummy_trades_on_dummy_graphs=false
automation.run_deterministic_dummy_trades_on_dummy_graphs=true
automation.dummy_graphs_data_folder_name=dummy_data
automation.dummy_graphs_data_files_names=DUMMY_Gemini_BTCUSD_1h_26_08_23_to_14_02_24.csv
automation.dummy_trades_timeframes=DAY,FOUR_HOUR,HOUR
automation.dummy_trades_initial_balance=10000
automation.dummy_trades_minimum_balance=5000
automation.dummy_trades_expected_balance_X=2
automation.dummy_trades_max_trades=1000
automation.write_dummy_trades_reports=true
automation.print_tasks_history=true
#Pattern factory configuration
patternfactory.min_granularity=10
patternfactory.default_granularity=100
patternfactory.max_granularity=500
patternfactory.min_pattern_length=4
patternfactory.default_pattern_length=18
patternfactory.max_pattern_length=50
patternfactory.min_scope=1
patternfactory.default_scope=12
patternfactory.max_scope=30
patternfactory.min_patterns_per_graph=1
patternfactory.test_granularity=100
patternfactory.test_pattern_length=10
patternfactory.test_scope=2
#CryptoCompare api configuration
requestingservicefactory.external_data_source=${REQUESTINGSERVICEFACTORY_EXTERNAL_DATA_SOURCE}
requestingservicefactory.api_key=${REQUESTINGSERVICEFACTORY_API_KEY}
requestingservicefactory.free_subscription=${REQUESTINGSERVICEFACTORY_FREE_SUBSCRIPTION}
#Signaling configuration
signaling.enabled=${SIGNALING_ENABLED}
signaling.subscribers_addresses=${SIGNALING_SUBSCRIBERS_ADDRESSES}
signaling.example_account_balance=${SIGNALING_EXAMPLE_ACCOUNT_BALANCE}
signaling.rates=${SIGNALING_RATES}
#User management configuration
usermanagement.repository_type=${USERMANAGEMENT_REPOSITORY_TYPE}
#Emailing configuration
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}
#JWT Configuration
springbootwebfluxjjwt.jjwt.secret=${JJWT_SECRET}
springbootwebfluxjjwt.jjwt.expiration=${JJWT_EXPIRATION}




