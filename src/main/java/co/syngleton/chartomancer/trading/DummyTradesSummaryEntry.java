package co.syngleton.chartomancer.trading;

import co.syngleton.chartomancer.util.csvwritertool.CSVRow;
import lombok.NonNull;
import org.jetbrains.annotations.Contract;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public record DummyTradesSummaryEntry(String dummyTradesDateTime,
                                      String computationDateTime,
                                      String csvTradesHistoryFileName,
                                      String dummyTradesSummaryCsvFileName,
                                      String symbol,
                                      String timeframe,
                                      String matchScoreSmoothing,
                                      String matchScoreThreshold,
                                      String priceVariationThreshold,
                                      String extrapolatePriceVariation,
                                      String extrapolateMatchScore,
                                      String patternAutoconfig,
                                      String computationAutoconfig,
                                      String computationType,
                                      String computationPatternType,
                                      String atomicPartition,
                                      String scope,
                                      String fullScope,
                                      String patternLength,
                                      String patternGranularity,
                                      String tradingMatchScoreSmoothing,
                                      String tradingMatchScoreThreshold,
                                      String tradingPriceVariationThreshold,
                                      String tradingExtrapolatePriceVariation,
                                      String tradingExtrapolateMatchScore,
                                      double riskToRewardRatio,
                                      int riskPercentage,
                                      float priceVariationMultiplier,
                                      SL_TP_Strategy slTpStrategy,
                                      int maxTrades,
                                      String tradesResult,
                                      double initialAccountBalance,
                                      double targetAccountBalance,
                                      double finalAccountBalance,
                                      double minimumAccountBalance,
                                      long numberOfTrades,
                                      long numberOfLongs,
                                      long numberOfShorts,
                                      long numberOfUselessTrades,
                                      float usedToUselessTradesRatio,
                                      double totalPnL,
                                      double longPnL,
                                      double shortPnL,
                                      double totalWinToLossRatio,
                                      double longWinToLassRatio,
                                      double shortWinToLongRatio,
                                      double averageTotalPnL,
                                      double averageLongPnL,
                                      double averageShortPnL,
                                      double averageTotalReturn,
                                      double averageLongReturn,
                                      double averageShortReturn,
                                      double profitFactor,
                                      ProfitFactor profitFactorQualification,
                                      double totalDuration,
                                      double annualizedReturnPercentage) implements CSVRow {

    @Contract(" -> new")
    @Override
    public @NonNull List<Serializable> toRow() {
        return new ArrayList<>(List.of(
                dummyTradesDateTime,
                computationDateTime,
                csvTradesHistoryFileName,
                dummyTradesSummaryCsvFileName,
                symbol,
                timeframe,
                matchScoreSmoothing,
                matchScoreThreshold,
                priceVariationThreshold,
                extrapolatePriceVariation,
                extrapolateMatchScore,
                patternAutoconfig,
                computationAutoconfig,
                computationType,
                computationPatternType,
                atomicPartition,
                scope,
                fullScope,
                patternLength,
                patternGranularity,
                tradingMatchScoreSmoothing,
                tradingMatchScoreThreshold,
                tradingPriceVariationThreshold,
                tradingExtrapolatePriceVariation,
                tradingExtrapolateMatchScore,
                riskToRewardRatio,
                riskPercentage,
                priceVariationMultiplier,
                slTpStrategy,
                maxTrades,
                tradesResult,
                initialAccountBalance,
                targetAccountBalance,
                finalAccountBalance,
                minimumAccountBalance,
                numberOfTrades,
                numberOfLongs,
                numberOfShorts,
                numberOfUselessTrades,
                usedToUselessTradesRatio,
                totalPnL,
                longPnL,
                shortPnL,
                totalWinToLossRatio,
                longWinToLassRatio,
                shortWinToLongRatio,
                averageTotalPnL,
                averageLongPnL,
                averageShortPnL,
                averageTotalReturn,
                averageLongReturn,
                averageShortReturn,
                profitFactor,
                profitFactorQualification,
                totalDuration,
                annualizedReturnPercentage
        ));
    }

}
